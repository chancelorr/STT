#!/bin/zsh

######################################################################
#							File Setup								 #
######################################################################

# Global variables
rc=0.547
rs=1.000


### OPTIONS
# Degree increment (##) (only necessary for recovered SH models)
d=d02
# Epoch
y=1990
# Model
#	0 for CALS10k.2
#	1 for CALS3k.4
#	2 for ARCH3k.1
#	3 for SED3k.1
mnum=1
# Input type (number of header lines):
#	0 for SH from STT
#	1 for Pure SH
iT=1
# Radius
r1=$rc
# Model type for dwnwdCnt
# 0 for Psi (doesn't work yet, Needs to be coupled with grdgradient to find bphi, btheta)
# 1 for Br
mtype=1
#always the same (3) when ignoring monopole
headers=3
###

######################################################################
#							Begin Script							 #
######################################################################

### MODS BASED ON THE OPTIONS
if ((iT==0)); then STT='STT'; fi
if ((y < 0)); then y=n${y:1:4}; epoch="${y:1:4} BCE"
	else; y=p$y; epoch="${y:1:4} CE"
	fi
if ((mtype==1)); then mt='_br'; mtname='Br'
elif ((mtype==0)); then mt='_psi'; mtname='@[\Psi @['
fi
if ((mnum==0)); then m=mC2 mname='CALS10k.2'	
	elif ((mnum==1)); then m=mC4; mname="CALS3k.4"
	elif ((mnum==2)); then m=mA1; mname='ARCH3k.1'
	elif ((mnum==3)); then m=mS1; mname='SED3k.1'
	else; echo 'Invalid model choice'; exit
fi
###

if (( iT==0 ));
then
	shfile='SHR'$m$d$y
	shout='R'$m$d$y$mt
	shloc='../shOut/'
	outfile='pdf/'$shout
	outgrid='nc/'$shout
	echo 'Input type: SH recovered from STT'
elif (( iT==1 ));
then
	shfile='SH'$m$y
	shout=$m$y$mt
	shloc='../sh/'
	outfile='pdf/'$shout
	outgrid='nc/'$shout
	echo 'Input type: original SH model'
else
	echo 'Error finding input file'
	exit
fi

echo 'outfile will be called ' ${outfile}.pdf

# Program

echo 'Running dwnwdCnt.f95 for r=' $r1 ' m'
# Downward continue model to r1
#Model name
#outname
#radius
#mType
./dwnwdCnt << !
$shloc$shfile
$outfile.tmp
$r1
$mtype
!

######################################################################
#							Begin GMT program						 #
######################################################################

gmt set PS_PAGE_ORIENTATION portrait FONT_ANNOT_PRIMARY 6  FONT_ANNOT_SECONDARY 3  FONT_TITLE 10 FONT_LABEL 6 MAP_LABEL_OFFSET 0.2c  MAP_ANNOT_OFFSET_PRIMARY 0.1c MAP_ANNOT_OFFSET_SECONDARY 0.1c PS_MEDIA letter MAP_TICK_LENGTH 0.1 PS_LINE_CAP round FORMAT_FLOAT_OUT %lg FORMAT_GEO_MAP ddd.mm MAP_FRAME_TYPE plain PS_LINE_JOIN bevel MAP_FRAME_PEN thin MAP_GRID_PEN thinnest,white
gmt set PROJ_ELLIPSOID sphere

### preliminaries
rgn=-R-180/180/-85/85
rgn=-Rg
proj=-JH0/10c
cbar=-G-225/225


### Color palette
echo 'making color palette'
#surface
#gmt makecpt -CPO.cpt -T-68.75/68.75/12.5 -Z -Vq > magCP.cpt
#core
#gmt makecpt -CPO.cpt -T-534/534/89 -Vq > magCP.cpt
gmt makecpt -CPO.cpt -T-600/600/100 -Vq > magCP.cpt



### Basemap
gmt psbasemap $rgn $proj -Bx -By -BsWNe -K > $outfile.ps

### Evaluate SH
echo 'converting sh to grid'
# Chop the header and evaluate spherical harmonics
# Resolution must be high enough for smooth contours

#awk "(NR>$headers)" $outfile.tmp | awk '{print $1, $2, $4, $4}' > whatreadCore.txt
awk "(NR>$headers)" $outfile.tmp | awk '{print $1, $2, $3, $4}' | \
	gmt sph2grd -G${outgrid}.nc $rgn -I0.1 -Ns -Vq
	
# rescale
echo 'Rescaling sh grid'
gmt grdmath ${outgrid}.nc 1000 DIV = ${outgrid}.nc

# grd2cpt
#gmt grd2cpt ${outgrid}.nc -CPO.cpt -Z > magCP.cpt
#gmt grd2cpt ${outgrid}.nc -CPO.cpt -Z > coreCP.cpt

#plot
echo 'plotting sh grid'
gmt grdimage ${outgrid}.nc -CmagCP.cpt $rgn $proj -O -K >> ${outfile}.ps
gmt grdcontour ${outgrid}.nc $proj -C250 -W0.5,white -O -K >> $outfile.ps

# Overlay another basemap
gmt psbasemap $rgn $proj -BNWse -O -K >> $outfile.ps

# coastlines
echo 'plotting coastlines'
gmt pscoast $rgn $proj -W1/0.3,black -Dc  -O -K >> $outfile.ps

# Colorbar
echo 'making colorbar'
gmt psscale $rgn $proj -DJRM+w4/.2+v+ml -Bxa500 -By+l"@[\mu T@[" \
	-CmagCP.cpt -G-530/530 -O -K >> $outfile.ps

# Annotations
echo 'annotating'
gmt pstext $rgn $proj -F+jLT+f10,0,black+cTL -N -O -K << EOF >> $outfile.ps
$mname $STT
EOF

gmt pstext $rgn $proj -F+jRT+f10,0,black+cTR -N -O -K << EOF >> $outfile.ps
r = 0.547
EOF

gmt pstext $rgn $proj -F+jLB+f10,0,black+cLB -N -O -K << EOF >> $outfile.ps
$mtname
EOF

gmt pstext $rgn $proj -F+jRB+f10,0,black+cBR -N -O -K << EOF >> $outfile.ps
$epoch
EOF


### 
# Surface Field
###

### New Color palette
echo 'making color palette'
gmt makecpt -CPO.cpt -T-60/60/10 -Vq > magCP.cpt

### Evaluate SH at the surface (doesnt pass through dwnwdCnt)
echo 'converting sh to grid'
# Chop the header and evaluate spherical harmonics (compute Psi)
# Resolution must be high enough for smooth contours
#awk "(NR>$headers)" $shloc${shfile} | awk '{print $1, $2, $3, $4}' > whatread.txt
awk "(NR>$headers)" $shloc${shfile} | awk '{print $1, $2, $3, $4}' | \
	gmt sph2grd -G${outgrid}.nc $rgn -I0.1 -Ns -Vq

# Rescale to microT	
echo 'rescaling sh grid'
gmt grdmath ${outgrid}.nc 1000 DIV = ${outgrid}.nc

# Toggle for setting up manual color palette
#gmt grd2cpt $outgrid.nc -CPO.cpt -Z > magCP.cpt

### Basemap
echo 'plotting sh grid'
gmt psbasemap $rgn $proj -Bx -By -BsWNe -Y6.2c -O -K >> $outfile.ps

### Plot
gmt grdimage ${outgrid}.nc -CmagCP.cpt $rgn $proj -O -K >> ${outfile}.ps
gmt grdcontour ${outgrid}.nc $proj -C50 -W0.5,white -O -K >> $outfile.ps

# Overlay another basemap
gmt psbasemap $rgn $proj -BNWse -O -K >> $outfile.ps

# coastlines
echo 'plotting coastlines'
gmt pscoast $rgn $proj -W1/0.3,black -Dc -O -K >> $outfile.ps
	
### Annotations
echo annotating
gmt pstext $rgn $proj -F+jLT+f10,0,black+cTL -N -O -K << EOF >> $outfile.ps
$mname $STT
EOF

gmt pstext $rgn $proj -F+jRT+f10,0,black+cTR -N -O -K << EOF >> $outfile.ps
r = 1.000
EOF

gmt pstext $rgn $proj -F+jLB+f10,0,black+cLB -N -O -K << EOF >> $outfile.ps
$mtname
EOF

gmt pstext $rgn $proj -F+jRB+f10,0,black+cBR -N -O -K << EOF >> $outfile.ps
$epoch
EOF

# Colorbar
gmt psscale $rgn $proj -DJRM+w4/.2+v -Bxa50 -By+l"@[\mu T@[" \
	-CmagCP.cpt  -O >> $outfile.ps


### finalize
echo 'Converting postscript'
gmt psconvert -Tf -Qt -Qg $outfile.ps

rm $outfile.ps magCP.cpt pdf/*.tmp 

open $outfile.pdf

#exit
